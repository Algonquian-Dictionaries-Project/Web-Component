# This workflows will build, test and upload the package to npm when a release is created

name: Upload Package
on:
  push:
    branches: [release]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true  
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
          scope: "@roedoejet"
      - run: npm install
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./packages/web-component
          start: npm run test-servers
          wait-on: npm run wait-for-test-server
      - run: cd ./packages/web-component && npm version patch
      - run: nx build web-component && nx prepublish web-component && nx build ngx-web-component
      - run: |
          cd dist/packages/web-component && npm publish
          cd dist/packages/ngx-web-component && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Determine tag
        id: determine_tag
        run: |
          echo "::set-output name=TAG_VERSION::$(npm view @readalongs/web-component version)"
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.determine_tag.outputs.TAG_VERSION }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Commit bumped version and merge with master
        run: |
          git add package.json packages/*/package.json
          git commit -m "chore: commit version"
          git fetch --unshallow
          git push origin release
          git checkout master
          git merge release
          git push origin master
